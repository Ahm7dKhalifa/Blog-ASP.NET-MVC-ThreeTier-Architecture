@model BlogBLL.ViewModels.UpdateText

<script src="~/front/EasyUi/jquery.min.js"></script>
<script src="~/front/EasyUi/jquery.easyui.min.js"></script>
<!--先引用jquery.min再引用jquery-->
<script src="~/front/EasyUi/locale/easyui-lang-zh_CN.js"></script>
<link href="~/front/EasyUi/themes/gray/easyui.css" rel="stylesheet" />
<link href="~/front/EasyUi/themes/icon.css" rel="stylesheet" />
<script src="~/kindeditor/kindeditor-all.js" type="text/javascript"></script>
<script src="~/kindeditor/lang/zh_CN.js" type="text/javascript"></script>
<link href="~/kindeditor/themes/default/default.css" rel="stylesheet" />
<link rel="stylesheet" href="~/front/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<link href="~/front/css/common.css" rel="stylesheet" />
<link href="~/front/css/main.css" rel="stylesheet" />
<span class="h5">
    增改文章
</span>
<div class="form-horizontal">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="TextID">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = Model.Id })
            </div>
        </div>
        <hr />
        <table class="insert-tab">
            <tbody>
                <tr>
                    <th><i class="require-red">*</i>标题：</th>
                    <td>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "common-text required", @id = "title", @name = "title", @size = "50", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <th width="120"><i class="require-red">*</i>分类：</th>

                    <td>
                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "common-text required", @id = "categroy", @name = "title", @size = "50", @type = "text" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr style="display:none">
                    <th>作者：</th>
                    <td><input class="common-text" name="author" size="10" value="Newbee" type="text" readonly="readonly"></td>
                </tr>
                <tr>
                    <th>内容：</th>
                    <td>
                        @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @class = "common-textarea", @style = "width:100%",@id = "content" }, @id = "content" })
                        <textarea rows="30" cols="20" name="schtmlnr" id="schtmlnr" style="display:none;"></textarea>

                    </td>
                </tr>
                <tr>
                    <th></th>
                    <td>
                        <input type="button" class="btn btn-primary btn6 mr10" plain="true" onclick="BlogUpdate()" value="提交更新" />
                        <button type="button" class="btn btn6" plain="true" onclick="backToList()">返回列表</button>
                    </td>
                </tr>
        </table>

    }
</div>
<script>
    var editor;
    KindEditor.ready(function (K) {
        editor = K.create('textarea[id="content"]', {
            width: '100%',
            minHeight: '300px',
            resizeType: 1,
            allowFileManager: true,
            uploadJson: '/manage/Upload',
            afterBlur: function () { this.sync; }
        });
        K('input[name=getHtml]').click(function (e) {
            alert(editor.html());
        });
        K('input[name=isEmpty]').click(function (e) {
            alert(editor.isEmpty());
        });
        K('input[name=getText]').click(function (e) {
            alert(editor.text());
        });
        K('input[name=selectedHtml]').click(function (e) {
            alert(editor.selectedHtml());
        });
        K('input[name=setHtml]').click(function (e) {
            editor.html('<h3>Hello KindEditor</h3>');
        });
        K('input[name=setText]').click(function (e) {
            editor.text('<h3>Hello KindEditor</h3>');
        });
        K('input[name=insertHtml]').click(function (e) {
            editor.insertHtml('<strong>插入HTML</strong>');
        });
        K('input[name=appendHtml]').click(function (e) {
            editor.appendHtml('<strong>添加HTML</strong>');
        });
        K('input[name=clear]').click(function (e) {
            editor.html('');
        });
    });
    function BlogUpdate() {
        var id = document.getElementById('TextID').firstElementChild.value;
        var title = document.getElementById('title').value;
        var categroy = document.getElementById('categroy').value;
        var regEn = /[\s#`~!@@$%^&*()_+<>?:"{},.\/;'[\]]/im,
            regCn = /[·！￥（——）：；“”‘、，|《。》？、【】[\]]/im;
        if (regEn.test(categroy) || regCn.test(categroy)) {
            alert("分类不能包含特殊字符(空格也不行哦)");
            console.log(categroy);
            return false;
        }
        editor.sync();// 同步数据后可以直接取得textarea的value
        var content = document.getElementById('content').value;
        //console.log(content);
        $.ajax({
            ajax: false,
            type: "POST",//FromMetho
            url: "/Manage/UpdateText",//"/Controller/Action"
            data: { ID:id, Title: title, Categroy: categroy, Content: content },
            success: function (data) {
                alert('更新成功');
                window.location.href = "/Manage/Update";
            },
            error: function () {
                alert('更新失败，肯定有Bug');
            }
        });
    }
    function backToList() {
        window.location.href = "/Manage/TextList";
    }
   
</script>